<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Tzi-PC" name="Default test" tests="6" failures="0" timestamp="18 May 2016 01:28:29 GMT" time="0.205" errors="0">
  <testcase name="@AfterMethod finish" time="0.0" classname="Main.main">
    <failure type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at Main.main.finish(main.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:712)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
    </failure>
  </testcase> <!-- @AfterMethod finish -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="Main.main">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod finish" time="0.0" classname="Main.main">
    <skipped/>
  </testcase> <!-- @AfterMethod finish -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="Main.main">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod finish" time="0.0" classname="Main.main">
    <skipped/>
  </testcase> <!-- @AfterMethod finish -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="Main.main">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod finish" time="0.0" classname="Main.main">
    <skipped/>
  </testcase> <!-- @AfterMethod finish -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="Main.main">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod finish" time="0.0" classname="Main.main">
    <skipped/>
  </testcase> <!-- @AfterMethod finish -->
  <testcase name="@BeforeMethod setup" time="0.0" classname="Main.main">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase name="@AfterMethod finish" time="0.0" classname="Main.main">
    <skipped/>
  </testcase> <!-- @AfterMethod finish -->
  <testcase name="BothwaySorting" time="0.011" classname="Main.main"/>
  <testcase name="BubbleSorting" time="0.006" classname="Main.main">
    <skipped/>
  </testcase> <!-- BubbleSorting -->
  <testcase name="InsertionSorting" time="0.005" classname="Main.main">
    <skipped/>
  </testcase> <!-- InsertionSorting -->
  <testcase name="QuickSorting" time="0.013" classname="Main.main">
    <skipped/>
  </testcase> <!-- QuickSorting -->
  <testcase name="RadixSorting" time="0.008" classname="Main.main">
    <skipped/>
  </testcase> <!-- RadixSorting -->
  <testcase name="SelectionSorting" time="0.006" classname="Main.main">
    <skipped/>
  </testcase> <!-- SelectionSorting -->
</testsuite> <!-- Default test -->
